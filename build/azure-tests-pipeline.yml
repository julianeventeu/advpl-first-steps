name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)_$(Hours)$(Minutes)$(Seconds)
trigger: none
variables:    
  branchName: $(Build.Repository.Name)
  commitHash: $(Build.SourceVersion)
  mydataBuild: $(Build.BuildNumber)
  imageNameBase: compilelib:$(Build.BuildId)
  containerName: $(Build.Repository.Name)_$(Build.BuildId)
  portugueseimageName: $(imageNameBase)_portuguese
    
  portugueseContainer: $(containerName)_portuguese

  system_accesstoken: $(System.AccessToken)
  artifactsFolder: /tmp/artifacts/$(containerName)
  
  portuguesePtm : tttp120.ptm
  
jobs:
- job: job1
  displayName: 'Run test'
  pool:
    name: Framework-Builds
    demands: Agent.OS -equals Linux
  workspace:
    clean: all
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts'
    inputs:
      buildType: specific
      project: 'b8d5b801-51a7-4651-8950-63c3728edd17'
      pipeline: 438
      artifactName: tttp120.ptm
      targetPath: '$(System.ArtifactsDirectory)\lib_path'












- job: buildEnglish
  displayName: 'English build'
  pool:
    name: Framework-Builds
    demands: Agent.OS -equals Linux
  workspace:
    clean: all
  steps:    
  - task: Docker@1
    displayName: Container Build
    inputs:
      command: build      
      containerregistrytype: Container Registry
      dockerRegistryEndpoint: docker_totvs
      dockerFile: Dockerfile
      imageName: $(englishimageName)
      qualifyImageName: false
      arguments: --pull --build-arg LANG=ENGLISH
  - script: |
      docker run --rm -d --name $(englishContainer) -v $(artifactsFolder)/:/artifacts/ $(englishimageName)
    displayName: Run Image
  - script: |
      docker exec $(englishContainer) /usr/local/fastComp.sh
    displayName: Exec Compile
  - script: |
      docker exec $(englishContainer) /usr/local/fastPatch.sh
    displayName: Exec Build Patch  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts in $(artifactsFolder)'
    inputs:
      PathtoPublish: '$(artifactsFolder)/$(englishPtm)' 
      ArtifactName: 'Patchs'
      publishLocation: Container
      TargetPath: $(System.DefaultWorkingDirectory)         
  - script: |
      rm -rf $(artifactsFolder)/$(englishPtm) 2> /dev/null || exit 0
    displayName: 'Remove Temp  $(englishPtm)'
    continueOnError: true
    condition: succeededOrFailed()
  - script: |
      docker stop $(englishContainer) 2> /dev/null || exit 0
    displayName: 'Stop container $(englishContainer)'
    continueOnError: true
    condition: succeededOrFailed()
  - script: |
      docker rmi -f $(englishimageName) 2> /dev/null || exit 0
    displayName: Remove local image
    continueOnError: true
    condition: succeededOrFailed()